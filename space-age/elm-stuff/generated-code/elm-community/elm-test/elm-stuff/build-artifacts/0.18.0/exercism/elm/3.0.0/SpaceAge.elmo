var _exercism$elm$SpaceAge$orbitalPeriodInEarthYears = {earth: 1.0, mercury: 0.2408467, venus: 0.61519726, mars: 1.8808158, jupiter: 11.862615, saturn: 29.447498, uranus: 84.016846, neptune: 164.79132};
var _exercism$elm$SpaceAge$earthYearInSec = 31557600;
var _exercism$elm$SpaceAge$ageOn = F2(
	function (planet, ageInseconds) {
		var _p0 = planet;
		switch (_p0.ctor) {
			case 'Mercury':
				return ageInseconds / (_exercism$elm$SpaceAge$earthYearInSec * _exercism$elm$SpaceAge$orbitalPeriodInEarthYears.mercury);
			case 'Venus':
				return ageInseconds / (_exercism$elm$SpaceAge$earthYearInSec * _exercism$elm$SpaceAge$orbitalPeriodInEarthYears.venus);
			case 'Earth':
				return ageInseconds / (_exercism$elm$SpaceAge$earthYearInSec * _exercism$elm$SpaceAge$orbitalPeriodInEarthYears.earth);
			case 'Mars':
				return ageInseconds / (_exercism$elm$SpaceAge$earthYearInSec * _exercism$elm$SpaceAge$orbitalPeriodInEarthYears.mars);
			case 'Jupiter':
				return ageInseconds / (_exercism$elm$SpaceAge$earthYearInSec * _exercism$elm$SpaceAge$orbitalPeriodInEarthYears.jupiter);
			case 'Saturn':
				return ageInseconds / (_exercism$elm$SpaceAge$earthYearInSec * _exercism$elm$SpaceAge$orbitalPeriodInEarthYears.saturn);
			case 'Uranus':
				return ageInseconds / (_exercism$elm$SpaceAge$earthYearInSec * _exercism$elm$SpaceAge$orbitalPeriodInEarthYears.uranus);
			default:
				return ageInseconds / (_exercism$elm$SpaceAge$earthYearInSec * _exercism$elm$SpaceAge$orbitalPeriodInEarthYears.neptune);
		}
	});
var _exercism$elm$SpaceAge$Neptune = {ctor: 'Neptune'};
var _exercism$elm$SpaceAge$Uranus = {ctor: 'Uranus'};
var _exercism$elm$SpaceAge$Saturn = {ctor: 'Saturn'};
var _exercism$elm$SpaceAge$Jupiter = {ctor: 'Jupiter'};
var _exercism$elm$SpaceAge$Mars = {ctor: 'Mars'};
var _exercism$elm$SpaceAge$Earth = {ctor: 'Earth'};
var _exercism$elm$SpaceAge$Venus = {ctor: 'Venus'};
var _exercism$elm$SpaceAge$Mercury = {ctor: 'Mercury'};
